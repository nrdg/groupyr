.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_classifier.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_auto_examples_plot_classifier.py:


======================================================
Logistic Sparse Group Lasso for grouped sparse signals
======================================================

Estimates a Sparse Group Lasso logistic regression model on a simulated
sparse signal. The estimated important features are compared with the
ground-truth.



.. image:: /auto_examples/images/sphx_glr_plot_classifier_001.png
    :alt: Estimated coefficients with ground truth imporant features highlighted
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Indices of ground-truth informative features:
    [ 62  63  66  69  71  72  73  74  78  79 202 203 204 205 208 210 211 216
     217 218 220 224 225 227 231 233 234 235 237 238]
    Indices of non-zero estimated coefs:
    [ 62  66  72  73  79 234 235 237]






|


.. code-block:: default

    import numpy as np
    from matplotlib import pyplot as plt
    from groupyr import LogisticSGLCV
    from groupyr.datasets import make_group_classification

    X, y, groups, idx = make_group_classification(
        n_samples=100,
        n_groups=20,
        n_informative_groups=3,
        n_features_per_group=20,
        n_informative_per_group=10,
        n_redundant_per_group=0,
        n_repeated_per_group=0,
        n_classes=2,
        scale=100,
        useful_indices=True,
        random_state=42,
    )

    _, n_features = X.shape

    model = LogisticSGLCV(
        groups=groups, l1_ratio=[0.80, 0.90], n_alphas=40, tol=1e-3, eps=1e-2, cv=3
    ).fit(X, y)

    plt.plot(
        np.arange(n_features),
        model.coef_,
        marker="o",
        mfc="black",
        mec="none",
        ms=3,
        mew=0,
        ls="",
        label="coefficients",
    )

    plt.plot(
        np.arange(n_features)[idx],
        model.coef_[idx],
        marker="o",
        mfc="none",
        mec="green",
        ms=5,
        mew=3,
        ls="",
        label="informative features",
    )

    plt.title("Estimated coefficients with ground truth imporant features highlighted")

    plt.legend(loc="best")
    plt.xlabel("Feature index")
    plt.ylabel("Coefs")

    plt.show()

    print("Indices of ground-truth informative features:")
    print(np.where(idx)[0])

    print("Indices of non-zero estimated coefs:")
    print(model.chosen_features_)


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 2 minutes  2.579 seconds)


.. _sphx_glr_download_auto_examples_plot_classifier.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_classifier.py <plot_classifier.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_classifier.ipynb <plot_classifier.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
